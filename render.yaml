services:
  - type: web
    name: chatwoot
    env: docker
    repo: https://github.com/chatwoot/chatwoot
    plan: free
    dockerContext: .
    dockerfilePath: Dockerfile
    envVars:
      - key: RAILS_ENV
        value: production
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: FRONTEND_URL
        value: https://chatwoot.onrender.com # Certifique-se de que este é o URL correto após o deploy
      - key: POSTGRES_HOST
        fromService:
          type: pserv
          name: chatwoot-db
          property: host
      - key: POSTGRES_DB
        value: chatwoot
      - key: POSTGRES_USER
        value: chatwoot
      - key: POSTGRES_PASSWORD
        fromService: # Corrigido: Pega a senha gerada pelo serviço do banco de dados
          type: pserv
          name: chatwoot-db
          envVarKey: POSTGRES_PASSWORD
      - key: REDIS_URL
        fromService:
          type: redis
          name: chatwoot-redis
          property: connectionString
  - type: pserv # Private Service para o PostgreSQL
    name: chatwoot-db
    runtime: postgres # Corrigido: 'runtime: postgres' em vez de 'env: postgres'
    plan: free
    envVars:
      - key: POSTGRES_DB
        value: chatwoot
      - key: POSTGRES_USER
        value: chatwoot
      - key: POSTGRES_PASSWORD
        generateValue: true # O Render vai gerar uma senha segura
    # Opcional: postgresMajorVersion: 14 (ou a versão desejada, o padrão é 14)
    # ipAllowList não é estritamente necessário aqui, pois por padrão
    # serviços privados são acessíveis por outros serviços na mesma conta Render.
    # Se necessário, poderia ser: ipAllowList: []
  - type: redis
    name: chatwoot-redis
    plan: free
    ipAllowList: [] # Adicionado: Necessário para serviços Redis. '[]' permite acesso de outros serviços na sua conta Render.
    # Opcional: redisVersion: 7 (ou a versão desejada, o padrão é 7)
