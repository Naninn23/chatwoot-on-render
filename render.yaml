services:
  - type: web
    name: chatwoot # Nome do seu serviço web principal
    env: docker
    repo: https://github.com/chatwoot/chatwoot # Repositório oficial
    branch: develop # Importante: Chatwoot usa 'develop' como branch principal
    plan: free # Ou o plano que você desejar (Starter, Standard, etc.)
    dockerContext: . # Diretório raiz do repositório como contexto de build
    dockerfilePath: Dockerfile # Nome e caminho do Dockerfile
    # O Render geralmente detecta o CMD/ENTRYPOINT do Dockerfile,
    # mas pode-se especificar o startCommand para garantir.
    startCommand: bundle exec rails s -p 3000 -b 0.0.0.0
    healthCheckPath: / # Um caminho básico para verificação de saúde
    envVars:
      - key: RAILS_ENV
        value: production
      - key: SECRET_KEY_BASE
        generateValue: true # Render irá gerar uma chave segura
      - key: DATABASE_URL
        fromDatabase:
          name: chatwoot-postgres-db # Deve corresponder ao nome na seção 'databases'
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis # Tipo do serviço a ser referenciado
          name: chatwoot-redis # Deve corresponder ao nome do serviço Redis abaixo
          property: connectionString
      - key: FRONTEND_URL
        value: ${RENDER_EXTERNAL_URL} # Render injeta a URL pública automaticamente
      - key: INSTALLATION_ENV
        value: render
      # Adicione outras variáveis específicas do Chatwoot aqui se necessário
      # Ex: TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, etc.
      # Para SMTP (envio de e-mails):
      # - key: MAILER_SENDER_EMAIL
      #   value: "notifications@seu-dominio.com"
      # - key: SMTP_ADDRESS
      #   value: "smtp.example.com"
      # - key: SMTP_PORT
      #   value: "587"
      # - key: SMTP_USERNAME
      #   value: "seu-usuario-smtp"
      # - key: SMTP_PASSWORD
      #   sync: false # Se for senha, evite fazer sync com o YAML, configure via UI do Render
      #   value: "sua-senha-smtp" # Ou use um segredo do Render
      # - key: SMTP_AUTHENTICATION
      #   value: "login" # ou plain, cram_md5
      # - key: SMTP_ENABLE_STARTTLS_AUTO
      #   value: "true"

  - type: redis # O Redis é definido como um serviço
    name: chatwoot-redis
    plan: free # Ou o plano que você desejar
    ipAllowList: [] # Necessário para serviços Redis. '[]' permite acesso de outros serviços na sua conta Render.
    # Opcional: redisVersion: 7 (ou a versão desejada, o padrão é 7)

databases:
  - name: chatwoot-postgres-db # Nome do seu serviço de banco de dados
    plan: free # Ou o plano que você desejar
    databaseName: chatwoot # O nome do banco de dados que será criado (ex: CREATE DATABASE chatwoot)
    user: chatwoot         # O usuário que será criado para este banco de dados
    # O Render irá gerar uma senha segura para este usuário automaticamente.
    # Opcional: postgresMajorVersion: 14 (ou a versão desejada, o padrão é 14)
